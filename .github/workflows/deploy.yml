name: Build and Deploy Frontend

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository_owner }}/global-market-frontend

jobs:
    build-and-push:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
            - uses: actions/checkout@v3

            - name: Debug directory structure
              run: |
                  echo "üìÅ Current directory structure:"
                  ls -la

            - name: Create .env file
              run: |
                  echo "NODE_ENV=production" > .env
                  echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}" >> .env
                  echo "Created .env file with:"
                  cat .env

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and Push Image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile
                  tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                  push: true
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      NODE_ENV=production
              env:
                  DOCKER_BUILDKIT: 1

            - name: Verify Image
              run: |
                  echo "üîç Verificando imagen construida..."
                  docker images
                  echo "üîç Intentando pull de la imagen..."
                  docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest || true

    deploy:
        name: Deploy to Production Server
        runs-on: ubuntu-latest
        needs: build-and-push
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Deploy via SSH
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SERVER_PRIVATE_KEY }}
                  script: |
                      echo "üîç Verificando estado del sistema..."
                      echo "Usuario actual: $(whoami)"
                      echo "Grupos del usuario: $(groups)"
                      echo "Estado de Docker: $(docker --version)"
                      echo "Estado de Docker Compose: $(docker compose version)"

                      echo "üõ†Ô∏è Configurando permisos para Docker..."  
                      sudo chmod 666 /var/run/docker.sock
                      sudo snap connect docker:docker-executables

                      echo "üìÅ Creando y configurando directorio /opt/frontend..."
                      sudo mkdir -p /opt/frontend
                      sudo chown -R $USER:$USER /opt/frontend
                      ls -la /opt/frontend

                      echo "üîê Escribiendo archivo .env en /opt/frontend..."
                      cat <<EOF > /opt/frontend/.env
                      NODE_ENV=production
                      PORT=3000 
                      NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
                      EOF
                      echo "Verificando .env:"
                      cat /opt/frontend/.env

                      echo "üìÑ Generando archivo docker-compose.yml..."
                      cat <<EOF > /opt/frontend/docker-compose.yml
                      version: '3'
                      services:
                        frontend:
                          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                          restart: always
                          ports:
                            - "3000:3000"
                          
                          env_file:
                            - .env
                      EOF
                      echo "Verificando docker-compose.yml:"
                      cat /opt/frontend/docker-compose.yml

                      echo "üîê Logueando en el Container Registry..."
                      echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

                      echo "üßπ Limpiando im√°genes no usadas (solo im√°genes)..."
                      docker image prune -f

                      echo "üì• Actualizando imagen..."
                      docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

                      echo "üê≥ Levantando contenedor con docker-compose..."
                      cd /opt/frontend
                      echo "Directorio actual: $(pwd)"
                      echo "Contenido del directorio:"
                      ls -la
                      echo "Intentando ejecutar docker compose..."
                      docker-compose down || true
                      docker-compose up -d

                      echo "‚úÖ Despliegue completado correctamente."
